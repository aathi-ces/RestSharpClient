// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Settings;
//
//    var appSettings = AppSettings.FromJson(jsonString);

namespace Settings
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class AppSettings
    {
        [JsonProperty("ReqRes")]
        public ReqRes ReqRes { get; set; }

        [JsonProperty("Restful-Booker")]
        public RestfulBooker RestfulBooker { get; set; }
    }

    public partial class ReqRes
    {
        [JsonProperty("BaseUrl")]
        public Uri BaseUrl { get; set; }

        [JsonProperty("Resources")]
        public ReqResResources Resources { get; set; }
    }

    public partial class ReqResResources
    {
        [JsonProperty("ListUsers")]
        public string ListUsers { get; set; }
    }

    public partial class RestfulBooker
    {
        [JsonProperty("BaseUrl")]
        public Uri BaseUrl { get; set; }

        [JsonProperty("Resources")]
        public RestfulBookerResources Resources { get; set; }
    }

    public partial class RestfulBookerResources
    {
        [JsonProperty("Auth")]
        public string Auth { get; set; }

        [JsonProperty("Booking")]
        public string Booking { get; set; }

        [JsonProperty("BookingId")]
        public string BookingId { get; set; }
    }

    public partial class AppSettings
    {
        public static AppSettings FromJson(string json) => JsonConvert.DeserializeObject<AppSettings>(json, Settings.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this AppSettings self) => JsonConvert.SerializeObject(self, Settings.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
